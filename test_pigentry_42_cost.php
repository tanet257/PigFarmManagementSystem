<?php

require __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

use App\Models\PigEntryRecord;
use App\Models\Cost;
use App\Models\Batch;
use App\Helpers\RevenueHelper;

echo "=== ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PigEntry ID 42 ===\n\n";

$entry = PigEntryRecord::find(42);
if (!$entry) {
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö PigEntry ID 42\n";
    exit;
}

echo "‚úì PigEntry ID: {$entry->id}\n";
echo "  - Farm ID: {$entry->farm_id}\n";
echo "  - Batch ID: {$entry->batch_id}\n";
echo "  - Entry Code: {$entry->entry_code}\n";
echo "  - Status: {$entry->status}\n\n";

// ‡∏î‡∏π‡∏ß‡πà‡∏≤ Cost ‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
$cost = Cost::where('pig_entry_record_id', 42)->first();
if ($cost) {
    echo "‚úì ‡∏û‡∏ö Cost ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠:\n";
    echo "  - Cost ID: {$cost->id}\n";
    echo "  - Cost Type: {$cost->cost_type}\n";
    echo "  - Transport Cost: {$cost->transport_cost}\n";
    echo "  - Total Price: {$cost->total_price}\n\n";
} else {
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Cost ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠\n\n";
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Batch
$batch = Batch::find($entry->batch_id);
if ($batch) {
    echo "‚ÑπÔ∏è Batch Info:\n";
    echo "  - Batch ID: {$batch->id}\n";
    echo "  - Batch Code: {$batch->batch_code}\n";
    echo "  - Farm ID: {$batch->farm_id}\n\n";
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Cost ‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
if (!$cost) {
    echo "üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Cost ‡πÉ‡∏´‡∏°‡πà ...\n";
    $basePrice = 0; // ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢
    $cost = Cost::create([
        'pig_entry_record_id' => 42,
        'batch_id' => $entry->batch_id,
        'farm_id' => $entry->farm_id,
        'cost_type' => 'shipping',
        'transport_cost' => 76000,
        'total_price' => $basePrice + 76000,
        'note' => 'Transport cost for pigentry 42 (recovered from wipeout)',
        'date' => now(),
    ]);
    echo "‚úì ‡∏™‡∏£‡πâ‡∏≤‡∏á Cost ID: {$cost->id}\n";
    echo "  - Cost Type: {$cost->cost_type}\n";
    echo "  - Transport Cost: {$cost->transport_cost}\n";
    echo "  - Total Price: {$cost->total_price}\n\n";
} else {
    echo "‚ÑπÔ∏è Cost ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ó transport_cost...\n";
    $oldPrice = $cost->total_price;
    $cost->transport_cost = 76000;
    $cost->total_price = ($cost->total_price - ($cost->transport_cost ?? 0)) + 76000;
    $cost->save();
    echo "‚úì ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ó transport_cost ‡πÄ‡∏õ‡πá‡∏ô 76000\n";
    echo "  - Old Total: {$oldPrice}\n";
    echo "  - New Total: {$cost->total_price}\n\n";
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á CostPayment ‡πÉ‡∏´‡πâ auto-approve
$costPayment = \App\Models\CostPayment::where('cost_id', $cost->id)->first();
if (!$costPayment) {
    echo "üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á CostPayment ‡πÉ‡∏´‡πâ auto-approve ...\n";
    $costPayment = \App\Models\CostPayment::create([
        'cost_id' => $cost->id,
        'cost_type' => $cost->cost_type,
        'status' => 'approved',
        'amount' => $cost->total_price,
        'approved_by' => 1,
        'approved_date' => now(),
    ]);
    echo "‚úì ‡∏™‡∏£‡πâ‡∏≤‡∏á CostPayment ID: {$costPayment->id}\n";
    echo "  - Status: {$costPayment->status}\n";
    echo "  - Amount: {$costPayment->amount}\n\n";
} else {
    echo "‚ÑπÔ∏è CostPayment ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ó amount...\n";
    $costPayment->amount = $cost->total_price;
    $costPayment->status = 'approved';
    $costPayment->save();
    echo "‚úì ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ó amount ‡πÄ‡∏õ‡πá‡∏ô {$costPayment->amount}\n\n";
}

// ‡∏£‡∏µ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Profit
if ($entry->batch_id) {
    echo "üîÑ ‡∏£‡∏µ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Profit ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Batch {$entry->batch_id} ...\n";
    RevenueHelper::calculateAndRecordProfit($entry->batch_id);
    echo "‚úì Profit recalculated\n\n";
}

echo "‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• pigentry 42 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏±‡∏ö transport cost 76000 ‡πÄ‡∏Ç‡πâ‡∏≤ dashboard ‡πÅ‡∏•‡πâ‡∏ß\n";
